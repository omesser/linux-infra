---
# Checking if the template exists
- name: Remove any existing VM with template ID
  shell: |
    qm unlock {{ template.vmid }} || true
    qm destroy {{ template.vmid }} || true


# https://galaxy.ansible.com/ui/repo/published/community/general/content/module/proxmox_kvm/

- name: Create VM with cloud-init parameters for template 
  community.general.proxmox_kvm:
    api_host: "{{ machine_config.proxmox_host_ip }}"
    api_user: "{{ machine_config.proxmox_user }}"
    api_password: "{{ machine_config.proxmox_user_password }}"
    node: "{{ machine_config.proxmox_node }}"
    name: "{{ template_name }}"
    vmid: "{{ template.vmid }}"
    ciuser: "{{ cloud_init_user }}"
    cipassword: "{{ cloud_init_password }}"
    cores: "{{ cores }}"
    memory: "{{ memory }}"
    
    ipconfig: "{{ template.ipconfig }}"
    net: "{{ template.net }}"

    ide:
      ide2: "{{ proxmox_storage }}:cloudinit"


    boot: "order=scsi0"
    ostype: "l26"
    agent: 1
    scsihw: "{{ scsihw }}"


# Tried to do the next part using this to do what we needed but couldn't so you can read about it.
# https://galaxy.ansible.com/ui/repo/published/community/general/content/module/proxmox_disk/


# Importing the linux image (cloud image and not the cloud init disk!) 
# to a disk that will later be attached to the template as boot device

- name: Import disk image into template VM
  shell: >
    qm importdisk {{ template.vmid }} {{template.cloud_image }} {{ template.root_storage }}
  register: import_disk
    
- name: Attach disk to template VM
  shell: |
    qm set {{ template.vmid }} \
      --scsi0 {{ template.root_storage }}:vm-{{ template.vmid }}-disk-0
  args:
    executable: /bin/bash



# Making this VM a template
- name: Convert VM to a template
  shell: >
    qm template {{ template.vmid }}
  register: convert_template
