# READ THIS PLEASE!
# https://galaxy.ansible.com/ui/repo/published/community/general/content/module/proxmox_kvm/

- name: Extract VM name and parameters
  set_fact:
    vm_name: "{{ vm_item.key }}"
    vm_params: "{{ vm_item.value }}"

- name: Debug - Creating VM
  debug:
    msg: "Creating VM {{ vm_name }} with parameters: {{ vm_params }}"


- name: Clone a new VM from the cloud-init template
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_host_ip }}"
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_user_password }}"
    node: "{{ proxmox_node }}"
    clone: "{{ template_name }}"
    name: "{{ vm_params.name | default(vm_name) }}"
    storage: "{{ proxmox_storage }}"
    state: present
  register: clone_vm


# - name: Create VMs on Proxmox
- name: Update Cloud-Init configuration on the new VM
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_host_ip }}"
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_user_password }}"
    node: "{{ proxmox_node }}"
    name: "{{ vm_params.name | default(vm_name) }}"
    sshkeys: "{{ lookup('file', vm_params.ssh_key_file ) }}"  # Can be configurable but for now it like this
    ciuser: "{{ vm_params.username }}"
    cipassword: "{{ vm_params.password }}"
    cpu: "host"
    cores: "{{ vm_params.cores | default(default_cores) }}"
    sockets: "{{ vm_params.sockets | default(default_sockets) }}"      
    memory: "{{ vm_params.memory | default(default_memory) }}"
    
    ipconfig: "{{ vm_params.ipconfig }}"
    net: "{{ vm_params.net }}"

    scsi: "{{ vm_params.scsi }}"

    args: "-virtfs local,path={{ vm_params.mounts.src }},mount_tag={{ vm_params.mounts.tag }},security_model=none"  # Currently added just one mount path we need a better understanding how to handle it better

    state: present
    update: True                               # Must be here to apply the update
    update_unsafe: True                        # Must be here to apply the update


# https://galaxy.ansible.com/ui/repo/published/community/general/content/module/proxmox_disk/
- name: Resize the root storage if needed
  community.general.proxmox_disk:
    api_host: "{{ proxmox_host_ip }}"
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_user_password }}"
    name: "{{ vm_params.name | default(vm_name) }}"
    disk: scsi0
    size: "+{{ vm_params.extend_root_size }}"
    state: resized

- name: Debug - Finished creating the VM
  debug:
    msg: "Finished Creating VM {{ vm_name }}"

# HERE ONLY FOR THE MOUNTING SO IF YOU DONT WANT JUST REMOVE
- name: Ensure mount point directory exists
  file:
    path: "{{ vm_params.mounts.src }}"      # Local directory where the share will be mounted
    state: directory
    mode: '0777'
############################################################

- name: Start the created VMs on Proxmox
  community.general.proxmox_kvm:
    api_host: "{{ proxmox_host_ip }}"
    api_user: "{{ proxmox_user }}"
    api_password: "{{ proxmox_user_password }}"
    node: "{{ proxmox_node }}"
    name: "{{ vm_params.name }}"
    state: started


- name: Wait for SSH to become available on the new VM
  wait_for:
    host: "{{ vm_params.accessable_ip }}"
    port: 22
    delay: 10
    timeout: 300

- name: Add new VM to in-memory inventory
  add_host:
    name: "{{ vm_params.name | default(vm_name) }}"
    ansible_host: "{{ vm_params.accessable_ip }}"
    ansible_user: "{{ vm_params.username }}"
    ansible_password: "{{ vm_params.password }}"
    groups: new_vms

    
# HERE ONLY FOR THE MOUNTING SO IF YOU DONT WANT JUST REMOVE
- name: Sets up the mounting
  include_tasks: mount.yml
############################################################
